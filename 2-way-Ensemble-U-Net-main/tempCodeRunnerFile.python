import matplotlib.pyplot as plt
import matplotlib.patches as mpatches

# Create a figure and axis
fig, ax = plt.subplots(figsize=(14, 8))

# Function to create a box with text
def create_box(ax, text, xy):
    boxstyle = "round,pad=0.3"
    facecolor = "lightblue"
    edgecolor = "black"
    box = mpatches.FancyBboxPatch(xy, width=2.8, height=0.8, boxstyle=boxstyle, facecolor=facecolor, edgecolor=edgecolor, mutation_aspect=2)
    ax.add_patch(box)
    ax.text(xy[0] + 1.4, xy[1] + 0.4, text, ha="center", va="center", fontsize=10)

# List of preprocessing steps with coordinates
steps = [
    ("Data Collection\n and Description", (0, 6)),
    ("Volume Division\n into 2D Images", (3, 6)),
    ("Removing Empty\n (Black) Slices", (6, 6)),
    ("Equally Spaced\n Slice Selection", (9, 6)),
    ("Image Augmentation\n (Flipping)", (12, 6)),
    ("Image Augmentation\n (Blurring)", (15, 6)),
    ("Final Dataset\n (Training and Testing)", (9, 3))
]

# Create boxes
for step in steps:
    create_box(ax, step[0], step[1])

# Add arrows to connect the boxes
arrows = [
    ((2.8, 6.4), (3, 6.4)),  # Data Collection to Volume Division
    ((5.8, 6.4), (6, 6.4)),  # Volume Division to Removing Empty Slices
    ((8.8, 6.4), (9, 6.4)),  # Removing Empty Slices to Equally Spaced Slice Selection
    ((11.8, 6.4), (12, 6.4)),  # Equally Spaced Slice Selection to Image Augmentation (Flipping)
    ((14.8, 6.4), (15, 6.4)),  # Image Augmentation (Flipping) to Image Augmentation (Blurring)
    ((10, 6), (10, 3.8))      # Image Augmentation (Blurring) to Final Dataset
]

for arrow in arrows:
    ax.annotate('', xy=arrow[1], xytext=arrow[0], arrowprops=dict(facecolor='black', shrink=0.05))

# Set plot limits and remove axes
ax.set_xlim(-1, 18)
ax.set_ylim(2, 7)
ax.axis('off')

# Title
plt.title("Preprocessing Workflow for Fetal Brain MRI Segmentation", fontsize=14)

# Display the plot
plt.show()
